{"version":3,"sources":["C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/$_lazy_route_resource lazy","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/RouteguardService.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app-services.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.html","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.scss","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.module.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.rootes.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.html","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.scss","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/auth.service.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.html","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.scss","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/environments/environment.ts","C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["var map = {\n\t\"./global-layout/workspace/workspace.module\": [\n\t\t\"../../../../../src/app/global-layout/workspace/workspace.module.ts\",\n\t\t\"workspace.module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Router } from \"@angular/router\";\r\nimport userModel from './login/login.component'\r\n@Injectable()\r\nexport class RouteguardService implements CanActivate{\r\n\r\n  constructor(\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean{\r\n    // 返回值 true: 跳转到当前路由 false: 不跳转到当前路由\r\n    // 当前路由名称\r\n    var path = route.routeConfig.path;  \r\n    // nextRoute: 设置需要路由守卫的路由集合\r\n    const nextRoute = ['workspace'];\r\n    let isLogin = userModel.isLogin;  // 是否登录\r\n    // 当前路由是nextRoute指定页时\r\n    if (nextRoute.indexOf(path) >= 0) {\r\n      if (!isLogin) {\r\n        // 未登录，跳转到login\r\n        this.router.navigate(['login']);\r\n        return false;\r\n      }else{\r\n        // 已登录，跳转到当前路由\r\n        return true;\r\n      }\r\n    }\r\n    // 当前路由是login时 \r\n    if (path === 'login') {\r\n      if (!isLogin) {\r\n        // 未登录，跳转到当前路由\r\n        return true;\r\n      }else{\r\n        // 已登录，跳转到home\r\n        this.router.navigate(['workspace']);\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/RouteguardService.ts","import { HttpClient ,HttpHeaders} from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\n\r\n@Injectable()\r\nexport class  AquireAgentUsr {\r\n\r\n    authenticated = false;\r\n    constructor(private $http: HttpClient) {\r\n    }\r\n\r\n    public acquire(username : string): Observable<any> {\r\n        return this.$http.get('av/getAvAgent/' + username);\r\n    }\r\n\r\n    // authenticate(credentials: credential, callback) {\r\n\r\n    //     const headers = new HttpHeaders(credentials ? {\r\n    //         anthorization: 'basic ' + btoa(credentials.username + ':' + credentials.password)\r\n    //     } : {});\r\n\r\n    //     this.$http.get('crm/user', {headers: headers}).subscribe(res => {\r\n    //         if (res['name']) {\r\n    //             this.authenticated = true;\r\n    //         } else {\r\n    //             this.authenticated = false;\r\n    //         }\r\n    //         return callback && callback();\r\n    //     })\r\n    // }\r\n}\r\n\r\ninterface credential {\r\n    username: string,\r\n    password: string\r\n}\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app-services.ts","module.exports = \"<!-- <div style=\\\"text-align:center\\\" *ngIf=\\\"cardsVisibility.login\\\">\\r\\n    <app-login (onLogin)=\\\"login($event)\\\" [IframeState]=\\\"agentState\\\"></app-login>\\r\\n  </div>\\r\\n<div calss=\\\"container-fluid\\\" [hidden]=\\\"cardsVisibility.login\\\">\\r\\n  <app-top-menu></app-top-menu>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-md-2\\\">\\r\\n        <app-left-nav></app-left-nav>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-7\\\">\\r\\n      <app-workspace></app-workspace>\\r\\n    </div>\\r\\n    <div class=\\\"col-md-3\\\"> -->\\r\\n      <!-- <div [hidden]=\\\"cardsVisibility.isLogin\\\"> -->\\r\\n          <!-- <div *ngIf=\\\"false\\\">\\r\\n        <app-connector></app-connector>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div> -->\\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n  <!-- <div class=\\\"panel-primary\\\">\\r\\n    <app-top-menu></app-top-menu>\\r\\n\\r\\n    <div class=\\\"panel-body\\\">\\r\\n      <app-add-crm-user></app-add-crm-user>\\r\\n      <app-add-agent-userr></app-add-agent-userr>\\r\\n\\r\\n     <router-outlet></router-outlet> -->\\r\\n<!-- </div> -->\\r\\n\\r\\n<router-outlet></router-outlet>\\r\\n\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.scss\n// module id = ../../../../../src/app/app.component.scss\n// module chunks = main","import { Component, ViewChild, OnInit } from '@angular/core';\r\nimport { AquireAgentUsr } from \"./app-services\";\r\nimport { HttpClient ,HttpHeaders} from '@angular/common/http';\r\nimport { ConnectorComponent } from './connector/connector.component'\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  \r\n  public constructor(private aquireAgentUsr: AquireAgentUsr){}\r\n  @ViewChild(ConnectorComponent) private connectorChild: ConnectorComponent;\r\n\r\n  title = 'app';\r\n  agentState: boolean = true;\r\n\r\n  public cardsVisibility = {\r\n    login: true,\r\n    isLogin: true\r\n  };\r\n\r\n  ngOnInit() {\r\n    var frame = document.getElementById(\"ifrm\");\r\n    if (frame) {\r\n      frame.addEventListener(\"load\", function(e) {\r\n        this.agentState = false;\r\n      }.bind(this),false);\r\n    } else {\r\n      this.agentState = false;\r\n    }\r\n  }\r\n  // login(loginMessage: {username: string, password: string}) {\r\n\r\n    \r\n  //   const username = loginMessage.username;\r\n  //   const password = loginMessage.password;\r\n  //   const credentials = {\r\n  //     'username': username,\r\n  //     'password': password\r\n  //   }\r\n  //   this.aquireAgentUsr.authenticate(credentials, () => {\r\n  //     this.cardsVisibility.login=false;\r\n  //   });\r\n\r\n    // this.aquireAgentUsr.acquire(username).subscribe(res => {\r\n    //   const userInfo = res.username;\r\n    //   const usrname = userInfo.avayaAgentUsr;\r\n    //   const password = userInfo.avayaAgentPassword;\r\n\r\n    //   const args = {\r\n    //     \"callbacKey\": \"login\",\r\n    //     \"credentials\": {\r\n    //       \"username\": usrname,\r\n    //       \"password\": password\r\n    //     }\r\n    //   }\r\n      \r\n    //   if (usrname && password) {\r\n    //     window.frames[0].postMessage(args, \"*\");\r\n    //   }\r\n    // },err => {\r\n    //   alert(\"error\")\r\n    //   console.log(err);\r\n    // });\r\n    \r\n    // this.cardsVisibility.isLogin = false;\r\n  // }\r\n  \r\n}\r\nexport class AgentUser  {\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpModule, JsonpModule, Http} from '@angular/http';\r\nimport { HttpClientModule, HttpClient, HttpInterceptor, HttpRequest,  HttpHandler, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { AquireAgentUsr } from \"./app-services\";\r\nimport { RouterModule } from '@angular/router';\r\nimport { routes } from './app.rootes'\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { DlComponent } from './bz-modules/dl/dl.component';\r\nimport { ShComponent } from './bz-modules/sh/sh.component';\r\nimport { HzComponent } from './bz-modules/hz/hz.component';\r\nimport { AuthService } from './login/auth.service';\r\nimport { RouteguardService } from './RouteguardService';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [\r\n    AquireAgentUsr,\r\n    AuthService,\r\n    RouteguardService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n// export class AppModule implements HttpInterceptor { \r\n//   intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n//     const xhr = req.clone({\r\n//       headers: req.headers.set('X-Requested-With', 'XMLHttpRequest')\r\n//     });\r\n//     return next.handle(xhr);\r\n//   }\r\n// }\r\nexport class AppModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.module.ts","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AddCrmUserComponent } from './add-user/add-crm-user/add-crm-user.component'\r\nimport { AddAgentUserrComponent } from './add-user/add-agent-userr/add-agent-userr.component'\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RouteguardService } from './RouteguardService';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n\t\tredirectTo: 'login',\r\n\t\tpathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'login', \r\n    component: LoginComponent,\r\n    canActivate: [RouteguardService]\r\n\r\n  },\r\n  {\r\n    path: \"workspace\",\r\n    loadChildren: './global-layout/workspace/workspace.module#WorkspaceModule',\r\n    canActivate: [RouteguardService]\r\n  },\r\n\t{\r\n\t\tpath: '**', // fallback router must in the last\r\n\t\tcomponent: LoginComponent\r\n\t}\r\n];\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/app.rootes.ts","module.exports = \"<div>\\r\\n  <iframe id=\\\"ifrm\\\" class=\\\"myFrame\\\"\\r\\n   src=\\\"https://bjebcedp16-sm100.aps.avaya.com/services/sunrise-sso-2-0-0-oc/\\\"></iframe>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.html\n// module id = ../../../../../src/app/connector/connector.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".myFrame {\\n  width: 300px;\\n  height: 500px;\\n  border-width: 5px;\\n  border-radius: 3px;\\n  float: right; }\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.scss\n// module id = ../../../../../src/app/connector/connector.component.scss\n// module chunks = main","import { Component, OnInit ,ViewChild} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-connector',\r\n  templateUrl: './connector.component.html',\r\n  styleUrls: ['./connector.component.scss']\r\n})\r\nexport class ConnectorComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n    console.log(\"view init\");\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/connector/connector.component.ts","import { Injectable } from '@angular/core';\r\nimport { HttpClient ,HttpHeaders, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/toPromise';\r\nimport 'rxjs/add/operator/map';\r\nimport { credential } from './interface';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  \r\n  authlogin(credential: credential): Observable<any> {\r\n    var headers: HttpHeaders = new HttpHeaders();\r\n    let params: HttpParams = new HttpParams();\r\n    let body = JSON.stringify({\r\n      cUserName: credential.cUserName,\r\n      cPassword: credential.cPassword\r\n    })\r\n    headers.append('Content-Type', 'application/json');\r\n    return this.http.post(\"http://localhost:8070/login\",body, {\r\n      headers: headers,\r\n      observe: 'response'\r\n      \r\n    });\r\n  } \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/auth.service.ts","module.exports = \"\\r\\n<div class=\\\"raw\\\">\\r\\n  <div class=\\\"col-md-12\\\">\\r\\n    <div class=\\\"col-md-3 col-md-offset-4\\\">\\r\\n      <h2 class=\\\"form-signin-heading\\\">CRM System</h2>\\r\\n      <label for=\\\"inputEmail\\\" class=\\\"sr-only\\\">CRM Login ID</label>\\r\\n      <input type=\\\"text\\\" id=\\\"inputEmail\\\" class=\\\"form-control\\\" placeholder=\\\"CRM Login ID\\\" required autofocus #email>\\r\\n      <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\r\\n      <input type=\\\"password\\\" id=\\\"inputPassword\\\" class=\\\"form-control\\\" placeholder=\\\"CRM Password\\\" required #password>\\r\\n      <div class=\\\"checkbox\\\">\\r\\n        <label>\\r\\n          <span></span>\\r\\n        </label>\\r\\n      </div>\\r\\n      <button class=\\\"btn btn-lg btn-primary btn-block\\\" (click)=\\\"login(email.value, password.value)\\\" [disabled]=\\\"IframeState\\\">Sign in</button>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.html\n// module id = ../../../../../src/app/login/login.component.html\n// module chunks = main","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.scss\n// module id = ../../../../../src/app/login/login.component.scss\n// module chunks = main","import { Component, OnInit, Output, EventEmitter, Input} from '@angular/core';\r\nimport { ActivatedRoute, Router, ActivatedRouteSnapshot, RouterState, RouterStateSnapshot } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\nimport { credential } from './interface';\r\nimport 'rxjs/add/operator/map';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLogin : boolean = false;\r\n  constructor(\r\n    public router: Router,\r\n    public activatedRoute: ActivatedRoute,\r\n    public auth: AuthService\r\n  ){}\r\n\r\n  // @Output() onLogin = new EventEmitter<{username: string, password: string}>();\r\n  @Input() IframeState: boolean;\r\n  // @Output() onload = new EventEmitter<{username: string, password: string}>();\r\n\r\n  /**\r\n   * login\r\n   */\r\n  login(user: string, pass: string): void {\r\n    this.isLogin = true;\r\n    const param: credential = {\r\n      cUserName: user,\r\n      cPassword: pass\r\n    }\r\n    this.auth.authlogin(param)\r\n    .subscribe(\r\n      res => {\r\n      // res => localStorage.setItem(\"id_token\" , res.id_token)\r\n      if (res) {\r\n        this.router.navigateByUrl('workspace');\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\nlet userModel = {\r\n  isLogin: false,　// 判断是否登录\r\n  accout: '',\r\n  password: '',\r\n};\r\n\r\nexport default userModel;\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/app/login/login.component.ts","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Avaya_dev/Git/gitstudy/SpringbootAngular5/src/main/angular/src/main.ts"],"sourceRoot":"webpack:///"}